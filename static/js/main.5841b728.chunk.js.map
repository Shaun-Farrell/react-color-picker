{"version":3,"sources":["utils/rgbCalcs.ts","utils/pickerHelper.ts","components/Picker.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["calcScale","fraction","lower","range","inverse","newFraction","rounded","Math","round","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","setTargetColor","e","setTarget","setHex","setCursorPnl","resetCursor","height","preventDefault","y","nativeEvent","offsetY","num","calculateGreen","calculateBlue","setHexInput","setCursor","target","width","x","offsetX","yAdjusted","diff","adjustForYMovement","adjustForXMovement","addGradient","context","start","gradientBig","createLinearGradient","canvas","multiplier","addColorStop","fillStyle","fillRect","SQ_SIDE","Picker","canvasRef","useRef","canvasSmallRef","useState","cursor","cursorPnl","useEffect","current","getContext","orig","canvasSmall","contextSmall","gradient","className","onMouseDown","ref","style","top","left","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5841b728.chunk.js","sourcesContent":["// Red RULES\n// red varies between 0.6 and 0.75 upward\n// red varies between 0.3 and 0.15 downward\n// red below 0.15 is 255\n// red above 0.75 is 255\nexport const calculateRed = (fraction: number) => {\n  return fraction >= 0.75 || fraction <= 0.15\n    ? 255\n    : fraction > 0.6 && fraction < 0.75\n    ? calcScale(fraction, 0.6, 0.15, false)\n    : fraction > 0.15 && fraction <= 0.3\n    ? calcScale(fraction, 0.15, 0.15, true)\n    : 0;\n};\n\n// Green RULES\n// green varies between 0.3 and 0.45 upward\n// green varies between 0.75 and 1 downwards\n// green below 0.3 is 0\n// otherwise 255\nexport const calculateGreen = (fraction: number) => {\n  return fraction > 0.3 && fraction <= 0.45\n    ? calcScale(fraction, 0.3, 0.15, false)\n    : fraction > 0.75 && fraction <= 1\n    ? calcScale(fraction, 0.75, 0.25, true)\n    : fraction <= 0.3\n    ? 0\n    : 255;\n};\n\n// Blue RULES\n// green varies between 0 and 0.15 upwards\n// green varies between 0.45 and 6 downwards\n// green above 0.6 is 0\n// otherwise 255\nexport const calculateBlue = (fraction: number) => {\n  return fraction >= 0 && fraction < 0.15\n    ? calcScale(fraction, 0, 0.15, false)\n    : fraction > 0.45 && fraction < 0.6\n    ? calcScale(fraction, 0.45, 0.15, true)\n    : fraction > 0.6\n    ? 0\n    : 255;\n};\n\n// Full example\n// 0.65 red\n// 0.05 above the lower point (0.6)\n// 0.05/0.15 = 0.33 (or 33%)\n// 0.33 * 255 = 85\nexport const calcScale = (\n  fraction: number,\n  lower: number,\n  range: number,\n  inverse: boolean\n) => {\n  // How much above the lower range are we\n  const delta = fraction - lower;\n  // How much is this as a fraction of the total range.\n  const newFraction = delta / range;\n  // Return that fraction of the total (255)\n  const rounded = Math.round(newFraction * 255);\n  return inverse ? 255 - rounded : rounded;\n};\n\nconst componentToHex = (c) => {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n};\n\nexport const rgbToHex = (r: number, g: number, b: number) => {\n  return componentToHex(r) + componentToHex(g) + componentToHex(b);\n};\n\nexport const adjustForXMovement = (target: number[], fraction: number) => {\n  const diff = [255 - target[0], 255 - target[1], 255 - target[2]];\n  return [\n    255 - Math.round(diff[0] * fraction),\n    255 - Math.round(diff[1] * fraction),\n    255 - Math.round(diff[2] * fraction),\n  ];\n};\n\nexport const adjustForYMovement = (target: number[], fraction: number) => {\n  const diff = [target[0], target[1], target[2]];\n  return [\n    target[0] - Math.round(diff[0] * fraction),\n    target[1] - Math.round(diff[1] * fraction),\n    target[2] - Math.round(diff[2] * fraction),\n  ];\n};\n","import {\n  calculateRed,\n  calculateBlue,\n  calculateGreen,\n  rgbToHex,\n  adjustForXMovement,\n  adjustForYMovement,\n} from \"./rgbCalcs\";\n\nexport const setTargetColor = (\n  e: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\n  setTarget: any,\n  setHex: any,\n  setCursorPnl: any,\n  resetCursor: any,\n  height: number\n) => {\n  e.preventDefault();\n  let y = e.nativeEvent.offsetY;\n  y = y < 0 ? 0 : y > height ? height : y; // handle border\n  const num = y / height;\n  const r = calculateRed(num);\n  const g = calculateGreen(num);\n  const b = calculateBlue(num);\n  setTarget([r, g, b]);\n  setCursorPnl({ y: y - 10 });\n  resetCursor();\n  setHex(`#${rgbToHex(r, g, b)}`);\n};\n\nexport const setHexInput = (\n  e: React.MouseEvent<HTMLCanvasElement, MouseEvent>,\n  setHex: any,\n  setCursor: any,\n  target: number[],\n  height: number,\n  width: number\n) => {\n  e.preventDefault();\n  let x = e.nativeEvent.offsetX;\n  let y = e.nativeEvent.offsetY;\n  y = y < 0 ? 0 : y > height ? height : y; // handle border\n  x = x < 0 ? 0 : x > width ? width : x; // handle border\n  const xAdjusted = adjustForXMovement(target, x / width);\n  const yAdjusted = adjustForYMovement(xAdjusted, y / height);\n  setHex(`#${rgbToHex(yAdjusted[0], yAdjusted[1], yAdjusted[2])}`);\n  setCursor({ x: x - 10, y: y - 10 });\n};\n\nexport const addGradient = (\n  context: CanvasRenderingContext2D,\n  start: number,\n  diff: number[],\n  width: number\n) => {\n  const gradientBig = context.createLinearGradient(\n    0,\n    0,\n    0,\n    context.canvas.height\n  );\n  const multiplier = (width / 255) * start;\n  const r = 255 - diff[0] * (multiplier / 255);\n  const g = 255 - diff[1] * (multiplier / 255);\n  const b = 255 - diff[2] * (multiplier / 255);\n  gradientBig.addColorStop(0, `rgb(${r}, ${g}, ${b})`);\n  gradientBig.addColorStop(1, \"rgb(0, 0, 0)\");\n  context.fillStyle = gradientBig;\n  context.fillRect(start, 0, 1, context.canvas.height);\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  setTargetColor,\n  addGradient,\n  setHexInput,\n} from \"../utils/pickerHelper\";\nimport \"../App.css\";\nconst SQ_SIDE = 350;\n\nexport default function Picker() {\n  const canvasRef = useRef(null);\n  const canvasSmallRef = useRef(null);\n  const [hex, setHex] = useState(\"#FF0000\");\n  const [target, setTarget] = useState([255, 0, 0]);\n  const [cursor, setCursor] = useState({ x: SQ_SIDE - 10, y: -10 });\n  const [cursorPnl, setCursorPnl] = useState({ y: -10 });\n  const resetCursor = () => setCursor({ x: SQ_SIDE - 10, y: -10 });\n\n  useEffect(() => {\n    const canvas: any = canvasRef.current;\n    const context: CanvasRenderingContext2D = canvas?.getContext(\"2d\");\n    const orig = [255, 255, 255];\n    const diff = [\n      orig[0] - target[0],\n      orig[1] - target[1],\n      orig[2] - target[2],\n    ];\n    const width = context.canvas.width;\n    for (let x = 0; x <= width; x++) {\n      addGradient(context, x, diff, width);\n    }\n    // setLoadState(\"loaded\");\n    const canvasSmall: any = canvasSmallRef.current;\n    const contextSmall = canvasSmall?.getContext(\"2d\");\n    let gradient = context.createLinearGradient(\n      0,\n      0,\n      0,\n      contextSmall.canvas.height\n    );\n\n    gradient.addColorStop(0, \"rgb(255, 0, 0)\");\n    gradient.addColorStop(0.15, \"rgb(255, 0, 255)\");\n    gradient.addColorStop(0.3, \"rgb(0, 0, 255)\");\n    gradient.addColorStop(0.45, \"rgb(0, 255, 255)\");\n    gradient.addColorStop(0.6, \"rgb(0, 255, 0)\");\n    gradient.addColorStop(0.75, \"rgb(255, 255, 0)\");\n    gradient.addColorStop(1, \"rgb(255, 0, 0)\");\n\n    contextSmall.fillStyle = gradient;\n    contextSmall.fillRect(\n      0,\n      0,\n      contextSmall.canvas.width,\n      contextSmall.canvas.height\n    );\n  }, [target]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"rel\">\n          <canvas\n            onMouseDown={(e) =>\n              setHexInput(e, setHex, setCursor, target, SQ_SIDE, SQ_SIDE)\n            }\n            className=\"canvas\"\n            ref={canvasRef}\n          />\n          <div className=\"circle\" style={{ top: cursor.y, left: cursor.x }} />\n        </div>\n        <div className=\"rel\">\n          <canvas\n            onMouseDown={(e) =>\n              setTargetColor(\n                e,\n                setTarget,\n                setHex,\n                setCursorPnl,\n                resetCursor,\n                SQ_SIDE\n              )\n            }\n            className=\"canvasSmall\"\n            ref={canvasSmallRef}\n          />\n          <div className=\"circle\" style={{ top: cursorPnl.y, left: 30 }} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"label\">HEX: </div>\n        <div className=\"hex\">{hex}</div>\n        <div className=\"current\" style={{ backgroundColor: hex }}></div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Picker from \"./components/Picker\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Colour Picker</h1>\n      <Picker />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}